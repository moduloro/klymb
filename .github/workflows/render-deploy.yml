name: Deploy to Render

permissions:
  contents: write

on:
  push:
    branches: [ main ]
  release:
    types: [ published ]
  workflow_dispatch:

concurrency:
  group: render-deploy-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Trigger Render deploy
        env:
          RENDER_DEPLOY_HOOK_URL: ${{ secrets.RENDER_DEPLOY_HOOK_URL }}
        run: |
          curl -fsSL -X POST "$RENDER_DEPLOY_HOOK_URL"
      - name: Wait for Render to deploy this commit (live)
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
          RENDER_SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID }}
          COMMIT_SHA: ${{ github.sha }}
        run: |
          set -e
          echo "Waiting for Render service $RENDER_SERVICE_ID to deploy commit $COMMIT_SHA..."
          sudo apt-get update >/dev/null 2>&1 || true
          sudo apt-get install -y jq >/dev/null 2>&1 || true
          # Poll up to ~20 minutes
          for i in $(seq 1 120); do
            json=$(curl -sS -H "Authorization: Bearer $RENDER_API_KEY" \
              "https://api.render.com/v1/services/${RENDER_SERVICE_ID}/deploys?limit=20" || true)
            # Find deploy matching this commit
            status=$(printf "%s" "$json" | jq -r --arg sha "$COMMIT_SHA" '[.[] | select(((.commitId // empty) == $sha) or ((.commit // empty) == $sha) or ((.gitCommitId // empty) == $sha))][0].status // empty')
            depId=$(printf "%s" "$json" | jq -r --arg sha "$COMMIT_SHA" '[.[] | select(((.commitId // empty) == $sha) or ((.commit // empty) == $sha) or ((.gitCommitId // empty) == $sha))][0].id // empty')
            echo "Attempt $i: status=${status:-unknown} deployId=${depId:-n/a}"
            if [ "$status" = "live" ]; then
              echo "Deploy is live (deployId=$depId). Allowing 30s for CDN propagation..."; sleep 30; exit 0; fi
            sleep 10
          done
          echo "Timed out waiting for Render to deploy commit $COMMIT_SHA" >&2
          exit 1
      - name: Notify Lighthouse via repository_dispatch
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          owner_repo=${GITHUB_REPOSITORY}
          echo "Dispatching render_deploy_succeeded to $owner_repo"
          curl -sS -X POST \
            -H "Authorization: Bearer $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github+json" \
            "https://api.github.com/repos/${owner_repo}/dispatches" \
            -d "{\"event_type\":\"render_deploy_succeeded\",\"client_payload\":{\"commit\":\"${GITHUB_SHA}\"}}"
