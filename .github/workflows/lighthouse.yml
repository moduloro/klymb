name: Lighthouse CI
# touch: trigger run post-deploy

permissions:
  contents: write

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 3 * * *' # run nightly at 03:00 UTC
  workflow_dispatch:
    inputs:
      send_email:
        description: "Send email report"
        type: boolean
        default: true
      to:
        description: "Override recipient email"
        required: false
        type: string

jobs:
  mobile:
    name: Mobile Audit
    runs-on: ubuntu-latest
    outputs:
      links: ${{ steps.lhci.outputs.links }}
      scores: ${{ steps.summarize.outputs.scores }}
    steps:
      - uses: actions/checkout@v4
      - name: Run Lighthouse (mobile)
        id: lhci
        uses: treosh/lighthouse-ci-action@v12
        continue-on-error: true
        with:
          configPath: ./lighthouserc-mobile.json
          uploadArtifacts: false
          temporaryPublicStorage: true
      - name: Upload artifact (mobile)
        uses: actions/upload-artifact@v4
        with:
            name: lighthouse-mobile
            path: .lighthouseci/*
      - name: Publish mobile reports to branch
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git fetch origin lh-reports || true
          if git ls-remote --exit-code --heads origin lh-reports; then
            git checkout -B lh-reports origin/lh-reports
          else
            git checkout -B lh-reports
            echo "Lighthouse reports branch" > README.md
            git add README.md
            git -c user.name="github-actions[bot]" -c user.email="41898282+github-actions[bot]@users.noreply.github.com" commit -m "chore(reports): init branch" || true
          fi
          mkdir -p reports/${GITHUB_RUN_ID}/mobile
          cp -r .lighthouseci/* reports/${GITHUB_RUN_ID}/mobile/
          rm -rf reports/latest
          mkdir -p reports
          cp -r reports/${GITHUB_RUN_ID} reports/latest
          git add reports README.md || true
          git -c user.name="github-actions[bot]" -c user.email="41898282+github-actions[bot]@users.noreply.github.com" commit -m "chore(reports): add mobile run ${GITHUB_RUN_ID}" || echo "no changes"
          git push -u origin lh-reports
      - name: Summarize scores (mobile)
        id: summarize
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = '.lighthouseci';
            const files = fs.existsSync(path) ? fs.readdirSync(path).filter(f => f.endsWith('.json')) : [];
            const result = [];
            for (const f of files) {
              const lhr = JSON.parse(fs.readFileSync(`${path}/${f}`, 'utf8'));
              const url = lhr.requestedUrl || lhr.finalUrl;
              const cats = lhr.categories;
              result.push({
                url,
                performance: cats.performance?.score ?? null,
                accessibility: cats.accessibility?.score ?? null,
                bestPractices: cats['best-practices']?.score ?? null,
                seo: cats.seo?.score ?? null,
              });
            }
            core.setOutput('scores', JSON.stringify(result));

  desktop:
    name: Desktop Audit
    needs: mobile
    runs-on: ubuntu-latest
    outputs:
      links: ${{ steps.lhci.outputs.links }}
      scores: ${{ steps.summarize.outputs.scores }}
    steps:
      - uses: actions/checkout@v4
      - name: Run Lighthouse (desktop)
        id: lhci
        uses: treosh/lighthouse-ci-action@v12
        continue-on-error: true
        with:
          configPath: ./lighthouserc-desktop.json
          uploadArtifacts: false
          temporaryPublicStorage: true
      - name: Upload artifact (desktop)
        uses: actions/upload-artifact@v4
        with:
            name: lighthouse-desktop
            path: .lighthouseci/*
      - name: Publish desktop reports to branch
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git fetch origin lh-reports || true
          if git ls-remote --exit-code --heads origin lh-reports; then
            git checkout -B lh-reports origin/lh-reports
          else
            git checkout -B lh-reports
            echo "Lighthouse reports branch" > README.md
            git add README.md
            git -c user.name="github-actions[bot]" -c user.email="41898282+github-actions[bot]@users.noreply.github.com" commit -m "chore(reports): init branch" || true
          fi
          mkdir -p reports/${GITHUB_RUN_ID}/desktop
          cp -r .lighthouseci/* reports/${GITHUB_RUN_ID}/desktop/
          rm -rf reports/latest
          mkdir -p reports
          cp -r reports/${GITHUB_RUN_ID} reports/latest
          git add reports README.md || true
          git -c user.name="github-actions[bot]" -c user.email="41898282+github-actions[bot]@users.noreply.github.com" commit -m "chore(reports): add desktop run ${GITHUB_RUN_ID}" || echo "no changes"
          git push -u origin lh-reports
      - name: Summarize scores (desktop)
        id: summarize
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = '.lighthouseci';
            const files = fs.existsSync(path) ? fs.readdirSync(path).filter(f => f.endsWith('.json')) : [];
            const result = [];
            for (const f of files) {
              const lhr = JSON.parse(fs.readFileSync(`${path}/${f}`, 'utf8'));
              const url = lhr.requestedUrl || lhr.finalUrl;
              const cats = lhr.categories;
              result.push({
                url,
                performance: cats.performance?.score ?? null,
                accessibility: cats.accessibility?.score ?? null,
                bestPractices: cats['best-practices']?.score ?? null,
                seo: cats.seo?.score ?? null,
              });
            }
            core.setOutput('scores', JSON.stringify(result));

  email_report:
    name: Nightly Email Report
    if: github.event_name == 'schedule' || (github.event_name == 'workflow_dispatch' && inputs.send_email == true)
    needs: [mobile, desktop]
    runs-on: ubuntu-latest
    steps:
      - name: Prepare email body
        id: prep
        uses: actions/github-script@v7
        with:
          script: |
            function format(items) {
              if (!items || !items.length) return '- No data';
              return items.map(x => {
                const p = Math.round((x.performance ?? 0)*100);
                const a = Math.round((x.accessibility ?? 0)*100);
                const b = Math.round((x.bestPractices ?? 0)*100);
                const s = Math.round((x.seo ?? 0)*100);
                return `- ${x.url}\n  - Performance: ${p}\n  - Accessibility: ${a}\n  - Best-Practices: ${b}\n  - SEO: ${s}`;
              }).join('\n');
            }
            const mobileScores = JSON.parse(process.env.MOBILE_SCORES || '[]');
            const desktopScores = JSON.parse(process.env.DESKTOP_SCORES || '[]');
            const mobileLinks = process.env.MOBILE_LINKS || 'see workflow artifacts';
            const desktopLinks = process.env.DESKTOP_LINKS || 'see workflow artifacts';
            const body = `Nightly Lighthouse Report\n\nMobile\n\n${format(mobileScores)}\n\nLinks: ${mobileLinks}\n\nDesktop\n\n${format(desktopScores)}\n\nLinks: ${desktopLinks}\n\nRun: ${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/actions/runs/${process.env.GITHUB_RUN_ID}\nReports branch: ${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/tree/lh-reports/reports/${process.env.GITHUB_RUN_ID}`;
            require('fs').writeFileSync('email.md', body);
      - name: Send email
        uses: dawidd6/action-send-mail@v3
        with:
          server: ${{ secrets.MAIL_SERVER }}
          port: ${{ secrets.MAIL_PORT || 465 }}
          secure: true
          username: ${{ secrets.MAIL_USERNAME }}
          password: ${{ secrets.MAIL_PASSWORD }}
          subject: Nightly Lighthouse Report
          from: ${{ secrets.MAIL_FROM || secrets.MAIL_USERNAME }}
          to: ${{ inputs.to || secrets.MAIL_TO || 'info.julita@gmail.com' }}
          html_body: file://email.md
        env:
          MOBILE_SCORES: ${{ needs.mobile.outputs.scores }}
          DESKTOP_SCORES: ${{ needs.desktop.outputs.scores }}
          MOBILE_LINKS: ${{ needs.mobile.outputs.links }}
          DESKTOP_LINKS: ${{ needs.desktop.outputs.links }}
  comment:
    name: PR Comment Summary
    if: github.event_name == 'pull_request'
    needs: [mobile, desktop]
    runs-on: ubuntu-latest
    steps:
      - name: Post Lighthouse summary comment
        uses: actions/github-script@v7
        with:
          script: |
            const mobileScores = JSON.parse(process.env.MOBILE_SCORES || '[]');
            const desktopScores = JSON.parse(process.env.DESKTOP_SCORES || '[]');
            const mobileLinks = process.env.MOBILE_LINKS;
            const desktopLinks = process.env.DESKTOP_LINKS;
            function fmt(items) {
              return items.map(x => `- ${x.url}\n  - Performance: ${Math.round((x.performance ?? 0)*100)}\n  - Accessibility: ${Math.round((x.accessibility ?? 0)*100)}\n  - Best-Practices: ${Math.round((x.bestPractices ?? 0)*100)}\n  - SEO: ${Math.round((x.seo ?? 0)*100)}`).join('\n');
            }
            const body = `### Lighthouse Summary\n\n**Mobile**\n\n${fmt(mobileScores)}\n\nLinks: ${mobileLinks || 'see workflow artifacts'}\n\n**Desktop**\n\n${fmt(desktopScores)}\n\nLinks: ${desktopLinks || 'see workflow artifacts'}`;
            const {owner, repo} = context.repo;
            const issue_number = context.payload.pull_request.number;
            await github.rest.issues.createComment({owner, repo, issue_number, body});
        env:
          MOBILE_SCORES: ${{ needs.mobile.outputs.scores }}
          DESKTOP_SCORES: ${{ needs.desktop.outputs.scores }}
          MOBILE_LINKS: ${{ needs.mobile.outputs.links }}
          DESKTOP_LINKS: ${{ needs.desktop.outputs.links }}
